/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CampaignsRouteImport } from './routes/campaigns'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CampaignsNewRouteImport } from './routes/campaigns/new'
import { Route as CampaignsCampaignIdRouteImport } from './routes/campaigns/$campaignId'
import { Route as CampaignsNewIndexRouteImport } from './routes/campaigns/new/index'
import { Route as CampaignsNewPreviewRouteImport } from './routes/campaigns/new/preview'
import { Route as CampaignsNewEnrichmentsRouteImport } from './routes/campaigns/new/enrichments'

const CampaignsRoute = CampaignsRouteImport.update({
  id: '/campaigns',
  path: '/campaigns',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignsNewRoute = CampaignsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => CampaignsRoute,
} as any)
const CampaignsCampaignIdRoute = CampaignsCampaignIdRouteImport.update({
  id: '/$campaignId',
  path: '/$campaignId',
  getParentRoute: () => CampaignsRoute,
} as any)
const CampaignsNewIndexRoute = CampaignsNewIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CampaignsNewRoute,
} as any)
const CampaignsNewPreviewRoute = CampaignsNewPreviewRouteImport.update({
  id: '/preview',
  path: '/preview',
  getParentRoute: () => CampaignsNewRoute,
} as any)
const CampaignsNewEnrichmentsRoute = CampaignsNewEnrichmentsRouteImport.update({
  id: '/enrichments',
  path: '/enrichments',
  getParentRoute: () => CampaignsNewRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/campaigns': typeof CampaignsRouteWithChildren
  '/campaigns/$campaignId': typeof CampaignsCampaignIdRoute
  '/campaigns/new': typeof CampaignsNewRouteWithChildren
  '/campaigns/new/enrichments': typeof CampaignsNewEnrichmentsRoute
  '/campaigns/new/preview': typeof CampaignsNewPreviewRoute
  '/campaigns/new/': typeof CampaignsNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/campaigns': typeof CampaignsRouteWithChildren
  '/campaigns/$campaignId': typeof CampaignsCampaignIdRoute
  '/campaigns/new/enrichments': typeof CampaignsNewEnrichmentsRoute
  '/campaigns/new/preview': typeof CampaignsNewPreviewRoute
  '/campaigns/new': typeof CampaignsNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/campaigns': typeof CampaignsRouteWithChildren
  '/campaigns/$campaignId': typeof CampaignsCampaignIdRoute
  '/campaigns/new': typeof CampaignsNewRouteWithChildren
  '/campaigns/new/enrichments': typeof CampaignsNewEnrichmentsRoute
  '/campaigns/new/preview': typeof CampaignsNewPreviewRoute
  '/campaigns/new/': typeof CampaignsNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/campaigns'
    | '/campaigns/$campaignId'
    | '/campaigns/new'
    | '/campaigns/new/enrichments'
    | '/campaigns/new/preview'
    | '/campaigns/new/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/campaigns'
    | '/campaigns/$campaignId'
    | '/campaigns/new/enrichments'
    | '/campaigns/new/preview'
    | '/campaigns/new'
  id:
    | '__root__'
    | '/'
    | '/campaigns'
    | '/campaigns/$campaignId'
    | '/campaigns/new'
    | '/campaigns/new/enrichments'
    | '/campaigns/new/preview'
    | '/campaigns/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CampaignsRoute: typeof CampaignsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/campaigns': {
      id: '/campaigns'
      path: '/campaigns'
      fullPath: '/campaigns'
      preLoaderRoute: typeof CampaignsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaigns/new': {
      id: '/campaigns/new'
      path: '/new'
      fullPath: '/campaigns/new'
      preLoaderRoute: typeof CampaignsNewRouteImport
      parentRoute: typeof CampaignsRoute
    }
    '/campaigns/$campaignId': {
      id: '/campaigns/$campaignId'
      path: '/$campaignId'
      fullPath: '/campaigns/$campaignId'
      preLoaderRoute: typeof CampaignsCampaignIdRouteImport
      parentRoute: typeof CampaignsRoute
    }
    '/campaigns/new/': {
      id: '/campaigns/new/'
      path: '/'
      fullPath: '/campaigns/new/'
      preLoaderRoute: typeof CampaignsNewIndexRouteImport
      parentRoute: typeof CampaignsNewRoute
    }
    '/campaigns/new/preview': {
      id: '/campaigns/new/preview'
      path: '/preview'
      fullPath: '/campaigns/new/preview'
      preLoaderRoute: typeof CampaignsNewPreviewRouteImport
      parentRoute: typeof CampaignsNewRoute
    }
    '/campaigns/new/enrichments': {
      id: '/campaigns/new/enrichments'
      path: '/enrichments'
      fullPath: '/campaigns/new/enrichments'
      preLoaderRoute: typeof CampaignsNewEnrichmentsRouteImport
      parentRoute: typeof CampaignsNewRoute
    }
  }
}

interface CampaignsNewRouteChildren {
  CampaignsNewEnrichmentsRoute: typeof CampaignsNewEnrichmentsRoute
  CampaignsNewPreviewRoute: typeof CampaignsNewPreviewRoute
  CampaignsNewIndexRoute: typeof CampaignsNewIndexRoute
}

const CampaignsNewRouteChildren: CampaignsNewRouteChildren = {
  CampaignsNewEnrichmentsRoute: CampaignsNewEnrichmentsRoute,
  CampaignsNewPreviewRoute: CampaignsNewPreviewRoute,
  CampaignsNewIndexRoute: CampaignsNewIndexRoute,
}

const CampaignsNewRouteWithChildren = CampaignsNewRoute._addFileChildren(
  CampaignsNewRouteChildren,
)

interface CampaignsRouteChildren {
  CampaignsCampaignIdRoute: typeof CampaignsCampaignIdRoute
  CampaignsNewRoute: typeof CampaignsNewRouteWithChildren
}

const CampaignsRouteChildren: CampaignsRouteChildren = {
  CampaignsCampaignIdRoute: CampaignsCampaignIdRoute,
  CampaignsNewRoute: CampaignsNewRouteWithChildren,
}

const CampaignsRouteWithChildren = CampaignsRoute._addFileChildren(
  CampaignsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CampaignsRoute: CampaignsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
